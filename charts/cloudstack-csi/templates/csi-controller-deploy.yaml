{{ if .Values.controller.enabled }}
{{ $enableLeaderElection := gt (int .Values.controller.replicaCount) 1 }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "csi.name" . }}-controller
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "csi.controller.labels" . | nindent 4 }}
  annotations:
    {{- with .Values.commonAnnotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.controller.replicaCount }}
  strategy:
    type: {{ .Values.controller.strategy.type }}
{{- if eq .Values.controller.strategy.type "RollingUpdate" }}
    rollingUpdate:
      maxUnavailable: {{ .Values.controller.strategy.rollingUpdate.maxUnavailable }}
      maxSurge: {{ .Values.controller.strategy.rollingUpdate.maxSurge }}
{{- end }}
  selector:
    matchLabels:
      {{- include "csi.controller.matchLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "csi.controller.labels" . | nindent 8 }}
      annotations:
        {{- with .Values.commonAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccount: cloudstack-csi-controller
      securityContext:
        {{- toYaml .Values.controller.podSecurityContext | nindent 8 }}
      containers:
        - name: cloudstack-csi-controller
          securityContext:
            {{- toYaml .Values.controller.securityContext | nindent 12 }}
          image: "{{ .Values.controller.csiDriverController.image.repository }}:{{ .Values.controller.csiDriverController.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.controller.csiDriverController.image.pullPolicy }}
          args:
            - "--endpoint=$(CSI_ENDPOINT)"
            - "--cloudstackconfig=$(CLOUD_CONFIG)"
            - "--logging-format={{ .Values.logFormat }}"
            - "--v={{ .Values.logVerbosityLevel }}"
            {{- if .Values.controller.csiDriverController.extraArgs }}
            {{- with .Values.controller.csiDriverController.extraArgs }}
            {{- tpl . $ | trim | nindent 12 }}
            {{- end }}
            {{- end }}
          env:
            - name: CSI_ENDPOINT
              value: unix:///var/lib/csi/sockets/pluginproxy/csi.sock
            - name: CLOUD_CONFIG
              value: /etc/config/cloud.conf
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
            - name: cloud-config
              mountPath: /etc/config/
          {{- with .Values.controller.csiDriverController.volumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - containerPort: 9808
              name: healthz
              protocol: TCP
          {{ if .Values.livenessProbe.enable }}
          livenessProbe: {{- toYaml .Values.livenessProbe.livenessProbeSpec | nindent 12 }}
          {{- end }}
        - name: external-provisioner
          securityContext:
            {{- toYaml .Values.controller.securityContext | nindent 12 }}
          image: "{{ .Values.controller.provisioner.image.repository }}:{{ .Values.controller.provisioner.image.tag }}"
          imagePullPolicy: {{ .Values.controller.provisioner.image.pullPolicy }}
          args:
            - "--v={{ .Values.logVerbosityLevel }}"
            - "--csi-address=$(ADDRESS)"
            - "--timeout={{ .Values.timeout }}"
            - "--feature-gates=Topology={{ .Values.controller.provisioner.topology }}"
            - "--timeout=300s"
            - "--kube-api-qps=100"
            - "--kube-api-burst=100"
            {{- if $enableLeaderElection }}
            - "--leader-election=true"
            - "--leader-election-lease-duration=120s"
            - "--leader-election-renew-deadline=60s"
            - "--leader-election-retry-period=30s"
            {{- end}}
            - "--default-fstype=ext4"
            - "--strict-topology"
            {{- if .Values.controller.provisioner.extraArgs }}
            {{- with .Values.controller.provisioner.extraArgs }}
            {{- tpl . $ | trim | nindent 12 }}
            {{- end }}
            {{- end }}
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
          resources: {{ toYaml .Values.controller.provisioner.resources | nindent 12 }}
        - name: external-attacher
          securityContext:
            {{- toYaml .Values.controller.securityContext | nindent 12 }}
          image: "{{ .Values.controller.attacher.image.repository }}:{{ .Values.controller.attacher.image.tag }}"
          imagePullPolicy: {{ .Values.controller.attacher.image.pullPolicy }}
          args:
            - "--v={{ .Values.logVerbosityLevel }}"
            - "--csi-address=$(ADDRESS)"
            - "--timeout={{ .Values.timeout }}"
            - "--default-fstype=ext4"
            {{- if $enableLeaderElection }}
            - "--leader-election=true"
            - "--leader-election-lease-duration=120s"
            - "--leader-election-renew-deadline=60s"
            - "--leader-election-retry-period=30s"
            {{- end}}
            - "--kube-api-qps=100"
            - "--kube-api-burst=100"
            {{- if .Values.controller.attacher.extraArgs }}
            {{- with .Values.controller.attacher.extraArgs }}
            {{- tpl . $ | trim | nindent 12 }}
            {{- end }}
            {{- end }}
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
          resources: {{ toYaml .Values.controller.attacher.resources | nindent 12 }}
        - name: external-resizer
          securityContext:
            {{- toYaml .Values.controller.securityContext | nindent 12 }}
          image: "{{ .Values.controller.resizer.image.repository }}:{{ .Values.controller.resizer.image.tag }}"
          imagePullPolicy: {{ .Values.controller.resizer.image.pullPolicy }}
          args:
            - "--v={{ .Values.logVerbosityLevel }}"
            - "--csi-address=$(ADDRESS)"
            - "--timeout={{ .Values.timeout }}"
            {{- if $enableLeaderElection }}
            - "--leader-election=true"
            - "--leader-election-lease-duration=120s"
            - "--leader-election-renew-deadline=60s"
            - "--leader-election-retry-period=30s"
            {{- end}}
            - "--kube-api-qps=100"
            - "--kube-api-burst=100"
            {{- if .Values.controller.resizer.extraArgs }}
            {{- with .Values.controller.resizer.extraArgs }}
            {{- tpl . $ | trim | nindent 12 }}
            {{- end }}
            {{- end }}
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
          resources: {{ toYaml .Values.controller.resizer.resources | nindent 12 }}
       {{ if .Values.livenessProbe.enable }}
        - name: liveness-probe
          securityContext:
            {{- toYaml .Values.node.securityContext | nindent 12 }}
          image: "{{ .Values.livenessProbe.image.repository }}:{{ .Values.livenessProbe.image.tag }}"
          imagePullPolicy: {{ .Values.livenessProbe.image.pullPolicy }}
          args:
            - "--v={{ .Values.logVerbosityLevel }}"
            - "--csi-address=$(ADDRESS)"
            {{- if .Values.livenessProbe.extraArgs }}
            {{- with .Values.livenessProbe.extraArgs }}
            {{- tpl . $ | trim | nindent 12 }}
            {{- end }}
            {{- end }}
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          volumeMounts:
            - mountPath: /var/lib/csi/sockets/pluginproxy/
              name: socket-dir
          resources: {{ toYaml .Values.livenessProbe.resources | nindent 12 }}
        {{- end }}          
      volumes:
        - name: socket-dir
          emptyDir: {}
        {{- if .Values.secret.enabled }}
        - name: cloud-config
          secret:
            secretName: {{ .Values.secret.name }}
        {{- else if .Values.secret.hostMount }}
        - name: cloud-config
          hostPath:
            path: /etc/cloudstack-csi-driver
        {{- end }}
        {{- with .Values.controller.volumes }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      affinity: {{ toYaml .Values.controller.affinity | nindent 8 }}
      nodeSelector: {{ toYaml .Values.controller.nodeSelector | nindent 8 }}
      tolerations: {{ toYaml .Values.controller.tolerations | nindent 8 }}
      {{- with .Values.controller.hostAliases }}
      hostAliases:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
{{- end }}